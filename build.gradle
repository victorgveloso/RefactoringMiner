apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "com.github.tsantalis"
version = "2.4.0"

applicationName = rootProject.name
mainClassName = "org.refactoringminer.RefactoringMiner"

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'res'
        }
    }
    test {
        java {
            srcDir 'src-test'
        }
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.13.1.202206130422-r'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'org.slf4j:slf4j-simple:2.0.6'
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.32.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.kohsuke:github-api:1.135'
    implementation 'io.github.java-diff-utils:java-diff-utils:4.12'
	implementation 'com.github.gumtreediff:core:3.0.0'
	implementation 'com.github.gumtreediff:gen.jdt:3.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'refactoring-miner'
            from components.java

            pom {
                name = "Refactoring Miner"
                description = 'RefactoringMiner is a library/API written in Java that can detect refactorings applied in the history of a Java project.'
                url = 'https://github.com/tsantalis/RefactoringMiner'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'tsantalis'
                        name = 'Nikolaos Tsantalis'
                        email = 'tsantalis@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:tsantalis/RefactoringMiner.git'
                    developerConnection = 'scm:git:git@github.com:tsantalis/RefactoringMiner.git'
                    url = 'https://github.com/tsantalis/RefactoringMiner/tree/master'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
